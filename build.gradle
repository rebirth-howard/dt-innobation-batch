plugins {
    id 'java'
    id 'org.springframework.boot' version '3.2.5'
    id 'io.spring.dependency-management' version '1.1.4'
}

allprojects {
    group = 'com.deutschmotors'
    version = '0.0.1-SNAPSHOT'
    java {
        toolchain {
            languageVersion = JavaLanguageVersion.of(17)
            vendor = JvmVendorSpec.AMAZON
        }
    }
    repositories {
        mavenCentral()
    }
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

subprojects {
    apply plugin: 'java'
    apply plugin: 'org.springframework.boot'
    apply plugin: 'io.spring.dependency-management'

    dependencies {
        compileOnly 'org.projectlombok:lombok'
        annotationProcessor 'org.projectlombok:lombok'
        implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.0.2' // http://localhost:8080/swagger-ui/index.html
        implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
        implementation 'javax.servlet:javax.servlet-api:4.0.1'
        implementation "com.querydsl:querydsl-jpa:5.0.0:jakarta"

    }
}

project(':module-api') {
    dependencies {
        implementation 'org.springframework.boot:spring-boot-starter-web'
        implementation 'org.springframework.boot:spring-boot-starter-security'
        implementation 'jakarta.validation:jakarta.validation-api:3.0.2'
        // flyway
        implementation("org.flywaydb:flyway-core")
        implementation("org.flywaydb:flyway-mysql")

        testImplementation 'org.springframework.boot:spring-boot-starter-test'
        testRuntimeOnly 'org.junit.platform:junit-platform-launcher'

        /* 모듈 영역 */
        implementation project(':module-data')
        implementation project(':module-common')

    }

    tasks.register("prepareKotlinBuildScriptModel") {}

    bootJar {
        enabled = true
    }
    jar {
        enabled = false
    }
}

project(':module-data') {
    dependencies {

        implementation 'software.aws.rds:aws-mysql-jdbc:1.1.14'
        implementation 'com.github.gavlyukovskiy:p6spy-spring-boot-starter:1.9.0'
        implementation 'org.hibernate.validator:hibernate-validator:8.0.0.Final'
        implementation 'javax.annotation:javax.annotation-api:1.3.2'

        // querydsl 의존성 추가
        annotationProcessor "com.querydsl:querydsl-apt:${dependencyManagement.importedProperties['querydsl.version']}:jakarta" // querydsl JPAAnnotationProcessor 사용 지정
        annotationProcessor "jakarta.annotation:jakarta.annotation-api" // java.lang.NoClassDefFoundError (javax.annotation.Generated) 대응 코드
        annotationProcessor "jakarta.persistence:jakarta.persistence-api:3.1.0" // java.lang.NoClassDefFoundError (javax.annotation.Generated) 대응 코드

        /* 모듈 영역 */
        implementation project(':module-common')

    }
    bootJar {
        enabled = false
    }
    jar {
        enabled = true
    }

    // gradle clean 시에 QClass 디렉토리 삭제
    clean {
        delete file('src/main/generated')
    }

}

project(':module-common') {
    dependencies {
        implementation 'org.springframework.boot:spring-boot-starter-web'
        implementation 'org.springframework.boot:spring-boot-starter-data-redis'
        implementation 'jakarta.validation:jakarta.validation-api:3.0.2'

        // jwt
        implementation group: 'io.jsonwebtoken', name: 'jjwt-api', version: '0.11.5'
        runtimeOnly group: 'io.jsonwebtoken', name: 'jjwt-impl', version: '0.11.5'
        runtimeOnly group: 'io.jsonwebtoken', name: 'jjwt-jackson', version: '0.11.5'

    }
    bootJar {
        enabled = false
    }
    jar {
        enabled = true
    }
}

project(':module-batch') {
    dependencies {
        implementation 'org.springframework.boot:spring-boot-starter'
        implementation 'org.springframework.boot:spring-boot-starter-batch'

        testImplementation 'org.springframework.boot:spring-boot-starter-test'
        testRuntimeOnly 'org.junit.platform:junit-platform-launcher'

        /* 모듈 영역 */
        implementation project(':module-data')
    }

    tasks.register("prepareKotlinBuildScriptModel") {}

    bootJar {
        enabled = false
    }
    jar {
        enabled = true
    }
}

bootJar {
    enabled = false
}

jar {
    enabled = false
}